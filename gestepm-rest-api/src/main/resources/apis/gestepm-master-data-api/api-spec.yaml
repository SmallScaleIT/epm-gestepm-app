openapi: 3.0.3
info:
  title: GestEPM Master Data API
  version: 0.1.0
  description: GestEPM Master Data API
  contact:
    name: Carlos Devesa PÃ©rez
servers:
  - url: /api
paths:
  /v1/activity-centers:
    parameters: []
    get:
      summary: V1 - List activity centers
      operationId: list-activity-centers-v1
      responses:
        '200':
          description: '**OK**'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResActivityCenterList'
      description: list-activity-centers-v1
      parameters:
        - $ref: ../../base-api-spec.yaml#/components/parameters/api-opt-meta
        - $ref: ../../base-api-spec.yaml#/components/parameters/api-opt-links
        - $ref: ../../base-api-spec.yaml#/components/parameters/api-opt-expand
        - $ref: ../../base-api-spec.yaml#/components/parameters/filter-pagination-offset
        - $ref: ../../base-api-spec.yaml#/components/parameters/filter-pagination-limit
        - $ref: ../../base-api-spec.yaml#/components/parameters/filter-order
        - $ref: ../../base-api-spec.yaml#/components/parameters/filter-order-by
        - schema:
            type: array
            items:
              type: integer
          in: query
          name: ids
          description: List of activity center ids to filter.
        - schema:
            type: string
          in: query
          name: name
          description: Search by activity center name.
        - schema:
            type: array
            items:
              type: integer
          in: query
          name: countryIds
          description: List of country ids to filter.
      tags:
        - activity-centers-v1
    post:
      summary: V1 - Create activity center
      operationId: create-activity-center-v1
      responses:
        '200':
          description: '**OK**'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResActivityCenter'
        '404':
          description: country-not-found
          content:
            application/json:
              schema:
                $ref: ../../base-api-spec.yaml#/components/schemas/ResError
        '409':
          description: activity-center-already-exist
          content:
            application/json:
              schema:
                $ref: ../../base-api-spec.yaml#/components/schemas/ResError
      description: create-activity-center-v1
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ReqCreateActivityCenter'
      tags:
        - activity-centers-v1
  '/v1/activity-centers/{id}':
    parameters:
      - schema:
          type: integer
        name: id
        in: path
        required: true
        description: Activity center id.
    get:
      summary: V1 - Find activity center
      responses:
        '200':
          description: '**OK**'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResActivityCenter'
        '404':
          description: activity-center-not-found
          content:
            application/json:
              schema:
                $ref: ../../base-api-spec.yaml#/components/schemas/ResError
      operationId: find-activity-center-by-id-v1
      description: find-activity-center-by-id-v1
      parameters:
        - $ref: ../../base-api-spec.yaml#/components/parameters/api-opt-meta
        - $ref: ../../base-api-spec.yaml#/components/parameters/api-opt-links
        - $ref: ../../base-api-spec.yaml#/components/parameters/api-opt-expand
      tags:
        - activity-centers-v1
    put:
      summary: V1 - Update activity center
      operationId: update-activity-center-v1
      responses:
        '200':
          description: '**OK**'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResActivityCenter'
        '404':
          description: activity-center-not-found | country-not-found
          content:
            application/json:
              schema:
                $ref: ../../base-api-spec.yaml#/components/schemas/ResError
      description: update-activity-center-v1
      parameters: []
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ReqUpdateActivityCenter'
      tags:
        - activity-centers-v1
    delete:
      summary: V1 - Delete activity center
      operationId: delete-activity-center-v1
      responses:
        '200':
          description: '**OK**'
          content:
            application/json:
              schema:
                $ref: ../../base-api-spec.yaml#/components/schemas/ResSuccess
        '404':
          description: activity-center-not-found
          content:
            application/json:
              schema:
                $ref: ../../base-api-spec.yaml#/components/schemas/ResError
      description: delete-activity-center-v1
      tags:
        - activity-centers-v1
  /v1/countries:
    get:
      summary: V1 - List countries
      responses:
        '200':
          description: '**OK**'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResCountryList'
      operationId: list-countries-v1
      description: list-countries-v1
      parameters:
        - $ref: ../../base-api-spec.yaml#/components/parameters/api-opt-meta
        - $ref: ../../base-api-spec.yaml#/components/parameters/api-opt-links
        - $ref: ../../base-api-spec.yaml#/components/parameters/filter-pagination-offset
        - $ref: ../../base-api-spec.yaml#/components/parameters/filter-pagination-limit
        - $ref: ../../base-api-spec.yaml#/components/parameters/filter-order
        - $ref: ../../base-api-spec.yaml#/components/parameters/filter-order-by
        - schema:
            type: array
            items:
              type: integer
          in: query
          name: ids
          description: List of country ids to filter.
        - schema:
            type: string
          in: query
          name: name
          description: Search by country name.
        - schema:
            type: array
            items:
              type: string
          in: query
          name: tags
          description: List of tags to filter.
      tags:
        - countries-v1
    post:
      summary: V1 - Create country
      operationId: create-country-v1
      responses:
        '200':
          description: '**OK**'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResCountry'
        '409':
          description: country-already-exist
          content:
            application/json:
              schema:
                $ref: ../../base-api-spec.yaml#/components/schemas/ResError
      description: create-country-v1
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ReqCreateCountry'
      tags:
        - countries-v1
    parameters: []
  '/v1/countries/{id}':
    parameters:
      - schema:
          type: integer
        name: id
        in: path
        required: true
        description: Country id.
    get:
      summary: V1 - Find country
      responses:
        '200':
          description: '**OK**'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResCountry'
        '404':
          description: country-not-found
      operationId: find-country-by-id-v1
      description: find-country-by-id-v1
      parameters:
        - $ref: ../../base-api-spec.yaml#/components/parameters/api-opt-meta
        - $ref: ../../base-api-spec.yaml#/components/parameters/api-opt-links
      tags:
        - countries-v1
    put:
      summary: V1 - Update country
      operationId: update-country-v1
      responses:
        '200':
          description: '**OK**'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResCountry'
        '404':
          description: country-not-found
      description: update-country-v1
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ReqUpdateCountry'
      tags:
        - countries-v1
    delete:
      summary: V1 - Delete country
      operationId: delete-country-v1
      responses:
        '200':
          description: '**OK**'
          content:
            application/json:
              schema:
                $ref: ../../base-api-spec.yaml#/components/schemas/ResSuccess
        '404':
          description: country-not-found
          content:
            application/json:
              schema:
                $ref: ../../base-api-spec.yaml#/components/schemas/ResError
      description: delete-country-v1
      tags:
        - countries-v1
  /v1/levels:
    get:
      summary: V1 - List levels
      tags:
        - levels-v1
      responses:
        '200':
          description: '**OK**'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResLevelList'
      operationId: list-levels-v1
      description: list-levels-v1
      parameters:
        - $ref: ../../base-api-spec.yaml#/components/parameters/api-opt-meta
        - $ref: ../../base-api-spec.yaml#/components/parameters/api-opt-links
        - $ref: ../../base-api-spec.yaml#/components/parameters/filter-pagination-offset
        - $ref: ../../base-api-spec.yaml#/components/parameters/filter-pagination-limit
        - $ref: ../../base-api-spec.yaml#/components/parameters/filter-order
        - $ref: ../../base-api-spec.yaml#/components/parameters/filter-order-by
        - schema:
            type: array
            items:
              type: integer
          in: query
          name: ids
          description: List of level ids to filter.
        - schema:
            type: string
          in: query
          name: name
          description: Search by level name.
    parameters: []
    post:
      summary: V1 - Create level
      operationId: create-level-v1
      responses:
        '200':
          description: '**OK**'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResLevel'
        '409':
          description: level-already-exists
          content:
            application/json:
              schema:
                $ref: ../../base-api-spec.yaml#/components/schemas/ResError
      tags:
        - levels-v1
      description: create-level-v1
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ReqCreateLevel'
  '/v1/levels/{id}':
    parameters:
      - schema:
          type: integer
        name: id
        in: path
        required: true
        description: Level id.
    get:
      summary: V1 - Find level
      tags:
        - levels-v1
      responses:
        '200':
          description: '**OK**'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResLevel'
        '404':
          description: level-not-found
          content:
            application/json:
              schema:
                $ref: ../../base-api-spec.yaml#/components/schemas/ResError
      operationId: find-level-by-id-v1
      description: find-level-by-id-v1
      parameters:
        - $ref: ../../base-api-spec.yaml#/components/parameters/api-opt-meta
        - $ref: ../../base-api-spec.yaml#/components/parameters/api-opt-links
    put:
      summary: V1 - Update Level
      operationId: update-level-v1
      responses:
        '200':
          description: '**OK**'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResLevel'
        '404':
          description: level-not-found
          content:
            application/json:
              schema:
                $ref: ../../base-api-spec.yaml#/components/schemas/ResError
        '409':
          description: level-already-exists
          content:
            application/json:
              schema:
                $ref: ../../base-api-spec.yaml#/components/schemas/ResError
      tags:
        - levels-v1
      description: update-level-v1
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ReqUpdateLevel'
    delete:
      summary: V1 - Delete level
      operationId: delete-level-v1
      responses:
        '200':
          description: '**OK**'
          content:
            application/json:
              schema:
                $ref: ../../base-api-spec.yaml#/components/schemas/ResSuccess
        '404':
          description: level-not-found
          content:
            application/json:
              schema:
                $ref: ../../base-api-spec.yaml#/components/schemas/ResError
      tags:
        - levels-v1
      description: delete-level-v1
  /v1/holidays:
    get:
      summary: V1 - List holidays
      tags:
        - holidays-v1
      responses:
        '200':
          description: '**OK**'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResHolidayList'
      operationId: list-holidays-v1
      description: list-holidays-v1
      parameters:
        - $ref: ../../base-api-spec.yaml#/components/parameters/api-opt-meta
        - $ref: ../../base-api-spec.yaml#/components/parameters/api-opt-links
        - $ref: ../../base-api-spec.yaml#/components/parameters/api-opt-expand
        - $ref: ../../base-api-spec.yaml#/components/parameters/filter-pagination-offset
        - $ref: ../../base-api-spec.yaml#/components/parameters/filter-pagination-limit
        - $ref: ../../base-api-spec.yaml#/components/parameters/filter-order
        - $ref: ../../base-api-spec.yaml#/components/parameters/filter-order-by
        - schema:
            type: array
            items:
              type: integer
          in: query
          name: ids
          description: List of holiday ids to filter.
        - schema:
            type: string
          in: query
          name: name
          description: Search by holiday name.
        - schema:
            type: integer
            format: date
          in: query
          name: day
          description: Search by holiday day.
        - schema:
            type: integer
            format: date
          in: query
          name: month
          description: Search by holiday month.
        - schema:
            type: array
            items:
              type: integer
          in: query
          name: countryIds
          description: List of holiday countries to filter.
        - schema:
            type: array
            items:
              type: integer
          in: query
          name: activityCenterIds
          description: List of holiday activity centers to filter.
    post:
      summary: V1 - Create holidays
      operationId: create-holiday-v1
      responses:
        '200':
          description: '**OK**'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResHoliday'
        '404':
          description: country-not-found | activity-center-not-found
          content:
            application/json:
              schema:
                $ref: ../../base-api-spec.yaml#/components/schemas/ResError
      tags:
        - holidays-v1
      description: create-holiday-v1
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ReqCreateHoliday'
    parameters: []
  '/v1/holidays/{id}':
    parameters:
      - schema:
          type: integer
        name: id
        in: path
        required: true
        description: Holiday id.
    get:
      summary: V1 - Find holiday
      tags:
        - holidays-v1
      responses:
        '200':
          description: '**OK**'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResHoliday'
        '404':
          description: holiday-not-found
          content:
            application/json:
              schema:
                $ref: ../../base-api-spec.yaml#/components/schemas/ResError
      operationId: find-holiday-by-id-v1
      description: find-holiday-by-id-v1
      parameters:
        - $ref: ../../base-api-spec.yaml#/components/parameters/api-opt-meta
        - $ref: ../../base-api-spec.yaml#/components/parameters/api-opt-links
        - $ref: ../../base-api-spec.yaml#/components/parameters/api-opt-expand
    put:
      summary: V1 - Update holiday
      operationId: update-holiday-v1
      responses:
        '200':
          description: '**OK**'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResHoliday'
        '404':
          description: holiday-not-found | country-not-found | activity-center-not-found
          content:
            application/json:
              schema:
                $ref: ../../base-api-spec.yaml#/components/schemas/ResError
      tags:
        - holidays-v1
      description: update-holiday-v1
      parameters: []
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ReqUpdateHoliday'
    delete:
      summary: V1 - Delete holiday
      operationId: delete-holiday-v1
      responses:
        '200':
          description: '**OK**'
          content:
            application/json:
              schema:
                $ref: ../../base-api-spec.yaml#/components/schemas/ResSuccess
        '404':
          description: holiday-not-found
          content:
            application/json:
              schema:
                $ref: ../../base-api-spec.yaml#/components/schemas/ResError
      tags:
        - holidays-v1
      description: delete-holiday-v1
components:
  schemas:
    ActivityCenter:
      title: ActivityCenter
      type: object
      properties:
        id:
          type: integer
        name:
          type: string
        country:
          $ref: '#/components/schemas/Country'
      required:
        - id
        - name
        - country
    ResActivityCenter:
      title: ResActivityCenter
      type: object
      properties:
        metadata:
          $ref: ../../base-api-spec.yaml#/components/schemas/Meta
        data:
          $ref: '#/components/schemas/ActivityCenter'
    ResActivityCenterList:
      title: ResActivityCenterList
      type: object
      properties:
        metadata:
          $ref: ../../base-api-spec.yaml#/components/schemas/Meta
        data:
          type: array
          items:
            $ref: '#/components/schemas/ActivityCenter'
    ReqCreateActivityCenter:
      title: ReqCreateActivityCenter
      type: object
      properties:
        name:
          type: string
        countryId:
          type: integer
      required:
        - name
        - countryId
    ReqUpdateActivityCenter:
      title: ReqUpdateActivityCenter
      type: object
      properties:
        name:
          type: string
        countryId:
          type: integer
      required:
        - name
        - countryId
    Country:
      title: Country
      type: object
      properties:
        id:
          type: integer
        name:
          type: string
        tag:
          type: string
      required:
        - id
        - name
        - tag
    ResCountry:
      title: ResCountry
      type: object
      properties:
        metadata:
          $ref: ../../base-api-spec.yaml#/components/schemas/Meta
        data:
          $ref: '#/components/schemas/Country'
    ResCountryList:
      title: ResCountryList
      type: object
      properties:
        metadata:
          $ref: ../../base-api-spec.yaml#/components/schemas/Meta
        data:
          type: array
          items:
            $ref: '#/components/schemas/Country'
    ReqCreateCountry:
      title: ReqCreateCountry
      type: object
      properties:
        name:
          type: string
        tag:
          type: string
      required:
        - name
        - tag
    ReqUpdateCountry:
      title: ReqUpdateCountry
      type: object
      properties:
        name:
          type: string
        tag:
          type: string
      required:
        - name
        - tag
    Level:
      title: Level
      type: object
      properties:
        id:
          type: integer
        name:
          type: string
        hourPrice:
          type: number
          format: double
    ResLevel:
      title: ResLevel
      type: object
      properties:
        metadata:
          $ref: ../../base-api-spec.yaml#/components/schemas/Meta
        data:
          $ref: '#/components/schemas/Level'
    ResLevelList:
      title: ResLevelList
      type: object
      properties:
        metadata:
          $ref: ../../base-api-spec.yaml#/components/schemas/Meta
        data:
          type: array
          items:
            $ref: '#/components/schemas/Level'
    ReqCreateLevel:
      title: ReqCreateLevel
      type: object
      properties:
        name:
          type: string
        hourPrice:
          type: number
          format: double
    ReqUpdateLevel:
      title: ReqUpdateLevel
      type: object
      properties:
        id:
          type: integer
        name:
          type: string
        hourPrice:
          type: number
          format: double
    Holiday:
      title: Holiday
      type: object
      properties:
        id:
          type: integer
        name:
          type: string
        day:
          type: integer
          format: date
          x-stoplight:
            id: 9s10celwcbojh
        month:
          type: integer
          x-stoplight:
            id: gfr8y5iy7omn3
        country:
          $ref: '#/components/schemas/Country'
        activityCenter:
          $ref: '#/components/schemas/ActivityCenter'
      required:
        - id
        - name
        - day
        - month
        - country
    ResHoliday:
      title: ResHoliday
      type: object
      properties:
        metadata:
          $ref: ../../base-api-spec.yaml#/components/schemas/Meta
        data:
          $ref: '#/components/schemas/Holiday'
    ResHolidayList:
      title: ResHolidayList
      type: object
      properties:
        metadata:
          $ref: ../../base-api-spec.yaml#/components/schemas/Meta
        data:
          type: array
          items:
            $ref: '#/components/schemas/Holiday'
    ReqCreateHoliday:
      title: ReqCreateHoliday
      type: object
      properties:
        name:
          type: string
        day:
          type: integer
          format: date
          x-stoplight:
            id: 2a6rkcj20se9p
        month:
          type: integer
          x-stoplight:
            id: p4syeg8po8egs
        countryId:
          type: integer
          x-stoplight:
            id: 9pehpomct5i1h
        activityCenterId:
          type: integer
      required:
        - name
        - day
        - month
        - countryId
    ReqUpdateHoliday:
      title: ReqUpdateHoliday
      x-stoplight:
        id: 3bb80b3a7980f
      type: object
      properties:
        name:
          type: string
        day:
          type: integer
          format: date
          x-stoplight:
            id: oilck61kmi3ao
        month:
          type: integer
          x-stoplight:
            id: 9dr95aln03na4
        countryId:
          type: integer
          x-stoplight:
            id: kx43a8zjy9qbo
        activityCenterId:
          type: integer
      required:
        - name
        - day
        - month
        - countryId
  securitySchemes:
    bearerAuth:
      type: http
      scheme: bearer
tags:
  - name: activity-centers-v1
    description: V1 - Activity centers
  - name: countries-v1
    description: V1 - Countries
  - name: levels-v1
    description: V1 - Levels
  - name: holidays-v1
    description: V1 - Holidays
security:
  - basicAuth: []
