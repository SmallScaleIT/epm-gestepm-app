sql:

  qry-list-of-wss: |

    SELECT
      wss.workshop_signing_id,
      wss.warehouse_signing_id,
      wss.user_id,
      wss.project_id,
      pr.name AS project_name,
      wss.started_at,
      wss.closed_at,
      wss.description
    FROM ${sch-gestepm}.workshop_signing wss
    LEFT JOIN ${sch-gestepm}.project pr ON wss.project_id = pr.project_id

    #whereToken #filter
    GROUP BY wss.workshop_signing_id
    #orderByToken

  qry-page-of-wss: |

    ${sql.qry-list-of-wss}
    ${sql.paginated-query}

  qry-count-of-wss: |

    SELECT COUNT(DISTINCT workshop_signing_id) AS "count"
    FROM (
      SELECT wss.workshop_signing_id
      FROM ${sch-gestepm}.workshop_signing wss      
      #whereToken #filter
    ) final

  qry-create-wss: |

    INSERT INTO ${sch-gestepm}.workshop_signing (
      user_id,
      project_id,
      warehouse_signing_id,
      started_at,
      description
    )
    VALUES (
      :attr_wss_user_id,
      :attr_wss_project_id,
      :attr_wss_warehouse_id,
      :attr_wss_started_at,
      :attr_wss_description
    )

  qry-update-wss: |

    UPDATE
      ${sch-gestepm}.workshop_signing
    SET
      started_at = :attr_wss_started_at,
      closed_at = :attr_wss_closed_at,
      warehouse_signing_id = :attr_wss_warehouse_id,
      description = :attr_wss_description
    WHERE
      workshop_signing_id = :attr_wss_id

  qry-delete-wss: |

    DELETE FROM ${sch-gestepm}.workshop_signing WHERE workshop_signing_id = :attr_wss_id

  filter-wss-by-params: |

    -- [AND
      -- ${sql.predicate-for-wss-ids}
      -- ${sql.predicate-for-wss-u-id}
      -- ${sql.predicate-for-wss-p-id}
      -- ${sql.predicate-for-wss-whs-id}
      -- ${sql.predicate-for-wss-current}
      -- ${sql.predicate-for-wss-date}
    -- AND]

  filter-wss-by-id: |

    -- [AND
      -- ${sql.predicate-for-wss-id}
    -- AND]

  predicate-for-wss-id: |

    wss.workshop_signing_id = :attr_wss_id

  predicate-for-wss-ids: |

    wss.workshop_signing_id IN (:attr_wss_ids)

  predicate-for-wss-u-id: |

    wss.user_id IN (:attr_wss_user_id)

  predicate-for-wss-p-id: |

    wss.project_id IN (:attr_wss_project_id)

  predicate-for-wss-whs-id: |
    
    wss.warehouse_signing_id IN (:attr_wss_warehouse_id)

  predicate-for-wss-current: |
    
    ((:attr_wss_current IS TRUE AND wss.closed_at IS NULL) OR (:attr_wss_current IS FALSE AND wss.closed_at IS NOT NULL))

  predicate-for-wss-date: |
    
    wss.started_at >= :attr_wss_started_at AND wss.closed_at <= :attr_wss_closed_at

