sql:

  qry-list-of-pes: |
    
    SELECT
      pes.personal_expense_sheet_id AS id_pagination,
      pes.personal_expense_sheet_id,
      pes.project_id,
      pes.description,
      pes.status,
      pes.observations,
      pe.personal_expense_id,
      pe.amount,
      pes.created_at,
      pes.created_by,
      pes.approved_at,
      pes.approved_by,
      pes.paid_at,
      pes.paid_by,
      pes.discharged_at,
      pes.discharged_by
    FROM ${sch-gestepm}.personal_expense_sheet pes
    LEFT JOIN ${sch-gestepm}.personal_expense pe ON pes.personal_expense_sheet_id = pe.personal_expense_sheet_id

    #whereToken #filter

  qry-page-of-pes: |

    ${sql.paginated-query-group-prefix}
    ${sql.qry-list-of-pes}
    ${sql.paginated-query-suffix}

  qry-count-of-pes: |

    SELECT COUNT(DISTINCT id_pagination) AS "count"
    FROM (${sql.qry-list-of-pes}) final

  qry-create-pes: |
    
    INSERT INTO ${sch-gestepm}.personal_expense_sheet (
      project_id,
      description,
      status,
      created_at,
      created_by
    )
    VALUES (
      :attr_pes_project_id,
      :attr_pes_description,
      :attr_pes_status,
      :attr_pes_created_at,
      :attr_pes_created_by
    )

  qry-update-pes: |
    
    UPDATE
      ${sch-gestepm}.personal_expense_sheet
    SET
      project_id = :attr_pes_project_id,
      description = :attr_pes_description,
      status = :attr_pes_status,
      observations = :attr_pes_observations,
      approved_at = :attr_pes_approved_at,
      approved_by = :attr_pes_approved_by,
      paid_at = :attr_pes_paid_at,
      paid_by = :attr_pes_paid_by,
      discharged_at = :attr_pes_discharged_at,
      discharged_by = :attr_pes_discharged_by
    WHERE
      personal_expense_sheet_id = :attr_pes_id

  qry-delete-pes: |

    DELETE FROM ${sch-gestepm}.personal_expense_sheet WHERE personal_expense_sheet_id = :attr_pes_id

  filter-pes-by-params: |

    -- [AND
      -- ${sql.predicate-for-pes-ids}
      -- ${sql.predicate-for-pes-user-id}
      -- ${sql.predicate-for-pes-project-id}
      -- ${sql.predicate-for-pes-description}
      -- ${sql.predicate-for-pes-start-date}
      -- ${sql.predicate-for-pes-status}
      -- ${sql.predicate-for-pes-observations}
    -- AND]

  filter-pes-by-id: |

    -- [AND
      -- ${sql.predicate-for-pes-id}
    -- AND]

  predicate-for-pes-id: |

    pes.personal_expense_sheet_id = :attr_pes_id

  predicate-for-pes-ids: |

    pes.personal_expense_sheet_id IN (:attr_pes_ids)

  predicate-for-pes-user-id: |

    pes.created_by = :attr_pes_created_by

  predicate-for-pes-project-id: |
    
    pes.project_id = :attr_pes_project_id

  predicate-for-pes-description: |
    
    pes.description LIKE :attr_pes_description

  predicate-for-pes-start-date: |
    
    pes.created_at > :attr_pes_created_at

  predicate-for-pes-status: |

    pes.status = :attr_pes_status

  predicate-for-pes-observations: |

    pes.observations LIKE :attr_pes_observations
