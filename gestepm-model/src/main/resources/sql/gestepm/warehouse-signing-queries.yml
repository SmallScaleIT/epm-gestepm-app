sql:

  qry-list-of-whs: |

    SELECT
      whs.warehouse_signing_id,
      whs.user_id,
      whs.project_id,
      pr.name AS project_name,
      whs.started_at,
      whs.closed_at,
      GROUP_CONCAT(wss.workshop_signing_id) workshop_signing_ids
    FROM ${sch-gestepm}.warehouse_signing whs
    LEFT JOIN ${sch-gestepm}.workshop_signing wss ON wss.warehouse_signing_id = whs.warehouse_signing_id
    LEFT JOIN ${sch-gestepm}.project pr ON whs.project_id = pr.project_id

    #whereToken #filter
    GROUP BY whs.warehouse_signing_id
    #orderByToken

  qry-page-of-whs: |

    ${sql.qry-list-of-whs}
    ${sql.paginated-query}

  qry-count-of-whs: |

    SELECT COUNT(DISTINCT warehouse_signing_id) AS "count"
    FROM (
      SELECT whs.warehouse_signing_id
      FROM ${sch-gestepm}.warehouse_signing whs      
      #whereToken #filter
    ) final

  qry-create-whs: |

    INSERT INTO ${sch-gestepm}.warehouse_signing (
      user_id,
      project_id,
      started_at
    )
    VALUES (
      :attr_whs_user_id,
      :attr_whs_project_id,
      :attr_whs_started_at
    )

  qry-update-whs: |

    UPDATE
      ${sch-gestepm}.warehouse_signing
    SET
      started_at = :attr_whs_started_at,
      closed_at = :attr_whs_closed_at
    WHERE
      warehouse_signing_id = :attr_whs_id

  qry-delete-whs: |

    DELETE FROM ${sch-gestepm}.warehouse_signing WHERE warehouse_signing_id = :attr_whs_id

  filter-whs-by-params: |

    -- [AND
      -- ${sql.predicate-for-whs-ids}
      -- ${sql.predicate-for-whs-u-id}
      -- ${sql.predicate-for-whs-p-id}
      -- ${sql.predicate-for-whs-current}
      -- ${sql.predicate-for-whs-date}
    -- AND]

  filter-whs-by-id: |

    -- [AND
      -- ${sql.predicate-for-whs-id}
    -- AND]

  predicate-for-whs-id: |

    whs.warehouse_signing_id = :attr_whs_id

  predicate-for-whs-ids: |

    whs.warehouse_signing_id IN (:attr_whs_ids)

  predicate-for-whs-u-id: |

    whs.user_id IN (:attr_whs_user_id)

  predicate-for-whs-p-id: |

    whs.project_id IN (:attr_whs_project_id)

  predicate-for-whs-current: |
    
    ((:attr_whs_current IS TRUE AND whs.closed_at IS NULL) OR (:attr_whs_current IS FALSE AND whs.closed_at IS NOT NULL))

  predicate-for-whs-date: |
    
    whs.started_at >= :attr_whs_started_at AND whs.closed_at <= :attr_whs_closed_at

