sql:

  qry-list-of-cs: |

    SELECT
      cs.construction_share_id AS id_pagination,
      cs.construction_share_id,
      cs.user_id,
      CONCAT(us.name, us.surnames) AS username,
      cs.project_id,
      p.name AS project_name,
      cs.observations,
      cs.start_date,
      cs.end_date,
      cs.operator_signature,
      cs.created_at,
      cs.created_by,
      cs.closed_at,
      cs.closed_by,
      csf.construction_share_file_id
    FROM ${sch-gestepm}.construction_share cs
    LEFT JOIN ${sch-gestepm}.projects p ON p.id = cs.projct_id
    LEFT JOIN ${sch-gestepm}.users us ON cs.user_id = us.ID
    LEFT JOIN ${sch-gestepm}.construction_share_file csf ON cs.construction_share_id = csf.construction_share_id

    #whereToken #filter

  qry-page-of-cs: |

    ${sql.paginated-query-group-prefix}
    ${sql.qry-list-of-cs}
    ${sql.paginated-query-suffix}

  qry-count-of-cs: |

    SELECT COUNT(DISTINCT id_pagination) AS "count"
    FROM (${sql.qry-list-of-cs}) final

  qry-create-cs: |

    INSERT INTO ${sch-gestepm}.construction_share (
      user_id,
      project_id,
      start_date,
      created_at,
      created_by
    )
    VALUES (
      :attr_cs_u_id,
      :attr_cs_p_id,
      :attr_cs_start_date,
      :attr_cs_created_at,
      :attr_cs_created_by
    )

  qry-update-cs: |

    UPDATE
      ${sch-gestepm}.construction_share
    SET
      project_id = :attr_cs_p_id,
      start_date = :attr_cs_start_date,
      end_date = :attr_cs_end_date,
      observations = :attr_cs_observations,
      operator_signature = :attr_cs_operator_signature,
      closed_at = :attr_cs_closed_at,
      closed_by = :attr_cs_closed_by
    WHERE
      construction_share_id = :attr_cs_id

  qry-delete-cs: |

    DELETE FROM ${sch-gestepm}.construction_share WHERE construction_share_id = :attr_cs_id
    
  filter-cs-by-params: |

    -- [AND
      -- ${sql.predicate-for-cs-ids}
      -- ${sql.predicate-for-cs-u-id}
      -- ${sql.predicate-for-cs-p-id}
      -- ${sql.predicate-for-cs-start-date}
      -- ${sql.predicate-for-cs-end-date}
    -- AND]

  filter-cs-by-id: |

    -- [AND
      -- ${sql.predicate-for-cs-id}
    -- AND]

  predicate-for-cs-id: |

    cs.construction_share_id = :attr_cs_id

  predicate-for-cs-ids: |

    cs.construction_share_id IN (:attr_cs_ids)

  predicate-for-cs-u-id: |

    cs.user_id = :attr_cs_u_id

  predicate-for-cs-p-id: |

    cs.project_id = :attr_cs_p_id

  predicate-for-cs-start-date: |

    cs.start_date > :attr_cs_start_date

  predicate-for-cs-end-date: |

    cs.end_date < :attr_cs_end_date
