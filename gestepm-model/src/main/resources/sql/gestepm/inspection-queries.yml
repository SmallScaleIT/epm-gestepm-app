sql:

  qry-list-of-i: |
    
    SELECT
      i.inspection_id,
      pr.project_id AS project_id,
      pr.name AS project_name,
      i.no_programmed_share_id,
      i.action,
      i.start_date,
      i.end_date,
      i.description,
      i.first_technical,
      CONCAT(ft.name, ft.surnames) AS first_technical_name,
      i.second_technical,
      i.signature,
      i.operator_signature,
      i.client_name,
      i.materials_file,
      i.materials_file_name,
      i.equipment_hours,   
      i.topic_id,
      i.modified_at,
      i.modified_by,
      GROUP_CONCAT(ifi.inspection_file_id) AS inspection_file_ids,
      GROUP_CONCAT(CONCAT_WS('|', im.inspection_material_id, im.units, im.description, im.reference)) AS inspection_materials
    FROM ${sch-gestepm}.inspection i
    LEFT JOIN ${sch-gestepm}.no_programmed_share nps ON i.no_programmed_share_id = nps.no_programmed_share_id
    LEFT JOIN ${sch-gestepm}.inspection_file ifi ON i.inspection_id = ifi.inspection_id
    LEFT JOIN ${sch-gestepm}.inspection_material im ON i.inspection_id = im.inspection_id
    LEFT JOIN ${sch-gestepm}.project pr ON nps.project_id = pr.project_id
    LEFT JOIN ${sch-gestepm}.user ft ON i.first_technical = ft.user_id

    #whereToken #filter
    GROUP BY i.inspection_id
    #orderByToken

  qry-page-of-i: |

    ${sql.qry-list-of-i}
    ${sql.paginated-query}

  qry-count-of-i: |

    SELECT COUNT(DISTINCT inspection_id) AS "count"
    FROM (
      SELECT i.inspection_id
      FROM ${sch-gestepm}.inspection i
      #whereToken #filter
    ) final

  qry-create-i: |
    
    INSERT INTO ${sch-gestepm}.inspection (
      no_programmed_share_id,
      action,
      start_date,
      first_technical,
      second_technical
    )
    VALUES (
      :attr_i_share_id,
      :attr_i_action,
      :attr_i_start_date,
      :attr_i_first_technical_id,
      :attr_i_second_technical_id
    )

  qry-update-i: |
    
    UPDATE
      ${sch-gestepm}.inspection
    SET
      no_programmed_share_id = :attr_i_share_id, 
      action = :attr_i_action, 
      start_date = :attr_i_start_date, 
      end_date = :attr_i_end_date, 
      description = :attr_i_description, 
      first_technical = :attr_i_first_technical_id, 
      second_technical = :attr_i_second_technical_id, 
      signature = :attr_i_signature, 
      operator_signature = :attr_i_operator_signature, 
      client_name = :attr_i_client_name, 
      materials_file = :attr_i_materials_file, 
      materials_file_name = :attr_i_materials_file_name,
      equipment_hours = :attr_i_equipment_hours,
      topic_id = :attr_i_topic_id,
      modified_at = :attr_i_modified_at,
      modified_by = :attr_i_modified_by
    WHERE
      inspection_id = :attr_i_id

  qry-delete-i: |

    DELETE FROM ${sch-gestepm}.inspection WHERE inspection_id = :attr_i_id

  filter-i-by-params: |

    -- [AND
      -- ${sql.predicate-for-i-ids}
      -- ${sql.predicate-for-i-share-id}
      -- ${sql.predicate-for-i-project-id}
      -- ${sql.predicate-for-i-start-date}
      -- ${sql.predicate-for-i-end-date}
      -- ${sql.predicate-for-i-current}
    -- AND]

  filter-i-by-id: |

    -- [AND
      -- ${sql.predicate-for-i-id}
    -- AND]

  predicate-for-i-id: |

    i.inspection_id = :attr_i_id

  predicate-for-i-ids: |

    i.inspection_id IN (:attr_i_ids)

  predicate-for-i-share-id: |

    i.no_programmed_share_id = :attr_i_share_id

  predicate-for-i-project-id: |
    
    nps.project_id = :attr_nps_p_id

  predicate-for-i-start-date: |
    
    i.start_date > :attr_i_start_date

  predicate-for-i-end-date: |
    
    i.end_date > :attr_i_end_date

  predicate-for-i-current: |
    ((:attr_i_current IS TRUE AND i.end_date IS NULL) OR (:attr_i_current IS FALSE AND i.end_date IS NOT NULL))
